/*====================================================
* Security mode, protect player transanction
* [Cydh]
* house.bad@gmail.com
* ---------------------------------------------------*/

-	script	Security Manager	-1,{
	OnSecuSettings:
		.@isSet = (getstrlen(#SecuCode$) > 0) ? 1 :0;
		if (.@isSet == 0) {
			if (is_security()) {
				.@secMsg$ = "^33CC33Forzado^000000 ^ff0000(Aún no configurado)^000000";
			}
			else {
				.@secMsg$ = "^ff0000Aún no configurado^000000";
			}
		}
		else {
			.@secMsg$ = "^33CC33On^000000";
		}

		if (is_security(getcharid(0))) {
			.@traMsg$ = "^ff0000Denegado^000000";
			.@traMenuMsg$ = "Permitir transacción";
			if (.@isSet == 0 && !$SecuMode) {
				.@traMsg$ = "^33CC33Permitido^000000";
			}
			.@unlockTrans = 1;
		}
		else {
			.@traMsg$ = "^33CC33Permitdo^000000";
			.@traMenuMsg$ = "Transacción Denegada";
		}

		if (#CyACCOUNTLOCK) {
			.@accMsg$ = "^ff0000Denegado^000000";
			.@accMenuMsg$ = "Permitir eliminación de personajes";
			.@unlockAccount = 1;
		}
		else {
			.@accMsg$ = "^33CC33Permitido^000000";
			.@accMenuMsg$ = "Denegar eliminación de personajes";
		}

		mes .npcname$;
		mes "Security status: "+.@secMsg$;
		mes "transacción status: "+.@traMsg$;
		mes "Char deletion: "+.@accMsg$;
		next;

		.@menu$ = "Información:";
		if (.@isSet == 1) {
			.@menu$ = .@menu$+"Cambiar codigo de Seguridad:"+.@traMenuMsg$+":"+.@accMenuMsg$+":Remover Security:^999999Close^000000:";
		}
		else {
			.@menu$ = .@menu$+"Activar Security::::^999999Close^000000:";
		}
		if (getgmlevel() >= .secuGMCanSet){
			.@menu$ = .@menu$+"Global Setings";
		}

		switch(select(.@menu$)) {
			case 1: // Info
				callsub(OnSecuInfo);
				break;
			case 2: // Change/Activate
				if (.@isSet == 1)
					callsub(OnSecuChangeCode);
				else
					callsub(OnSetSecuCode);
				break;
			case 3: // Deny/Allow Trans
				callsub(OnSecuTransaction,.@unlockTrans);
				break;
			case 4: // Deny/Allow Delete
				callsub(OnSecuLockAccount,.@unlockAccount);
				break;
			case 5: // Remove
				callsub(OnSecuRemove);
				break;
			case 7: // Global Set
				callsub(OnSecuSetup);
				break;
		}
		close;

	OnSecuInfo:
		next;
		.@secuConfig = getbattleflag("security_mode");
		mes .npcname$;
		mes "Este modo de seguridad evitará algunas actividades como:";
		if (.@secuConfig&SECU_DROP)				mes "-> Drop item(s).";
		if (.@secuConfig&SECU_VENDING)			mes "-> Comprar un item en Vending shop.";
		if (.@secuConfig&SECU_VENDING_OPEN)		mes "-> Abrir una tienda con Vending.";
		if (.@secuConfig&SECU_BUYINGSTORE)		mes "-> Vender articulos con Buyingstore.";
		if (.@secuConfig&SECU_BUYINGSTORE_OPEN)	mes "-> Abrir un nuevo Buyingstore";
		if (.@secuConfig&SECU_TRADE)			mes "-> Tradear con otros personajes.";
		if (.@secuConfig&SECU_GUILD_STORAGE)	mes "-> Agregar/Poner un item/en Guild Storage.";
		if (.@secuConfig&SECU_BREAKGUILD)		mes "-> Deshacer una guild";
		if (.@secuConfig&SECU_RESET_ITEM)		mes "-> Borrar artículos en inventario, cart, o storage.";
		if (.@secuConfig&SECU_NPCTRADE)			mes "-> Transacción con un NPC.";
		if (.@secuConfig&SECU_REMOVE_OPT)		mes "-> Remover (cart, falcon, warg)";
		if (.@secuConfig&SECU_COMPOUND)			mes "-> Equipar card en un equipo.";
		if (.@secuConfig&SECU_DELHOMUN)			mes "-> Eliminar homunculus.";
		if (.@secuConfig&SECU_MAIL)				mes "-> Abrir mail.";
		if (.@secuConfig&SECU_AUCTION)			mes "-> Abrir auction.";
		if (.@secuConfig&SECU_RESET_SKILL_STAT)	mes "-> Resetear Skill/Status.";
		if (.@secuConfig&SECU_FEEDING)			mes "-> Alimentar Pet/homunculus";
		if (.@secuConfig&SECU_BANK)			mes "-> Depositar/Retirar del banco.";
		if (.@secuConfig&SECU_COMMAND)			mes "-> Usar ciertos comandos.";

		return;

	OnSecuChangeCode:
		next;
		mes .npcname$;
		//if (getstrlen(#SecuCode$) > 0) {
		if (is_security()) {
			mes "Seguro que quieres cambiar tu codigo de seguridad?";
			next;
			switch (select("^999999Cancel^000000:Seguro")) {
				case 1:
					close;
					break;
				case 2:
					next;
					mes .npcname$;
					mes "Insertar tu ^0000ffActual^000000 security code, ahora.";
					input .@currentSecuCode$;
					if (#SecuCode$ != .@currentSecuCode$){
						mes "^ff0000Ingresaste un código de seguridad incorrecto. Inténtalo de nuevo!^000000";
						close;
					}
					break;
			}
		}
		callsub(OnSetSecuCode);
		end;

	OnSetSecuCode:
		mes "Inserta tu ^339933NUEVO^000000 Codigo de seguridad.";
		mes "^ff0000- Debe tener mas de "+.secuCharMin+" caracteres!";
		mes "- debe tener menos de "+.secuCharMax+" caracteres!";
		input .@newSecuCode1$;
		if (getstrlen(.@newSecuCode1$) < .secuCharMin || getstrlen(.@newSecuCode1$) > .secuCharMax) {
			mes "^ff0000¡Sigue las instrucciones de arriba! Intenta nuevamente más tarde!.^000000";
		}
		else {
			mes "-----------------------------------";
			mes "^339933Vuelve a insertar tu nuevo^000000 Codigo de seguridad.";
			input .@newSecuCode2$;

			if (.@newSecuCode1$ != .@newSecuCode2$) {
				mes "^ff0000El código de seguridad no coincide. Intenta nuevamente más tarde!^000000";
			}
			else{
				mes "El código de seguridad se ha configurado correctamente!";
				#SecuCode$ = .@newSecuCode2$;
				setsecurity 1,getcharid(0);
				message strcharinfo(0),"Security se ha configurado correctamente!";
			}
		}
		next;
		callsub(OnSecuSettings);
		close;

	OnSecuTransaction:
		if (getarg(0) == 1) {
			callsub(OnSecuEnableTrans);
		}
		else {
			callsub(OnSecuDisableTrans);
		}
		end;

	OnSecuEnableTrans:
		//if (!(getstrlen(#SecuCode$))) {
		if (!is_security()) {
			callsub(OnSetSecuCode);
			end;
		}
		else {
			next;
			mes .npcname$;
			mes "Ingresa tu código de seguridad";
			next;
			input .@inSecuCode$;
			if (#SecuCode$ == .@inSecuCode$){
				mes .npcname$;
				mes "Ahora puedes hacer cualquier transacción.";
				setsecurity 0,getcharid(0);
				next;
			}
			else {
				mes .npcname$;
				mes "Código de seguridad erróneo";
				next;
			}
		}
		callsub(OnSecuSettings);
		end;

	OnSecuDisableTrans:
		next;
		mes .npcname$;
		mes "¿Quieres negar tu transacción??";
		menu "Si",OnSecuActivate,"No",-;
		close;

	OnSecuActivate:
		next;
		mes .npcname$;
		mes "No puedes hacer ninguna transacción ahora!";
		setsecurity 1,getcharid(0);
		next;
		callsub(OnSecuSettings);
		end;

	OnSecuLockAccount:
		if (getarg(0) == 1) {
			next;
			mes .npcname$;
			mes "Ingrese su código de seguridad para permitir la eliminación de personajes";
			next;
			input .@inSecuCode$;
			if (#SecuCode$ == .@inSecuCode$){
				mes .npcname$;
				mes "^FF0000La eliminación de personajes esta habilitada ahora, ten cuidado!^000000";
				#CyACCOUNTLOCK = 0;
			}
			else {
				mes .npcname$;
				mes "Código de seguridad erróneo";
			}
		}
		else {
			next;
			mes .npcname$;
			mes "Quieres denegar la eliminación de personajes?";
			switch(select("Yes:No")) {
				case 1:
					mes "^006100La eliminación de personajes esta denegada ahora^000000";
					#CyACCOUNTLOCK = 1;
					break;
			}
		}
		close;

	OnSecuRemove:
		next;
		mes .npcname$;
		mes "¿Realmente quieres eliminar tu Security?";
		mes "^ff0000Su cuenta correrá el riesgo de que un desconocido pueda mover sus artículos.^000000";
		menu "Claro que lo eliminaré",OnSecuRemoveYes,"Close",-;
		close;

	OnSecuRemoveYes:
		next;
		mes .npcname$;
		mes "Ingrese su código de seguridad";
		next;
		input .@inSecuCode$;
		if (#SecuCode$ == .@inSecuCode$){
			mes .npcname$;
			mes "Su código de seguridad se removera, puede restablecerlo nuevamente.";
			setsecurity 0,getcharid(0);
			#SecuCode$ = "";
			#CyACCOUNTLOCK = 0;
			close2;
			//atcommand "@kick "+strcharinfo(0)+"";
			end;
		}
		else {
			mes .npcname$;
			mes "Código de seguridad incorrecto, no puede remover su código.";
			next;
			callsub(OnSecuSettings);
			end;
		}

	OnSecuSetup:
		if (!$SecuMode)	.@secuMode$ = "^0097FFInsegura^000000";
		else			.@secuMode$ = "^FF6A00Forzar para activar^000000";
		next;
		mes .npcname$;
		mes "Security Mode:";
		mes "    "+.@secuMode$+"";
		mes "Auto-Announcer:";
		if ($SecuAnnounce)	.@secuAutoAnn$ = "^0000FFActivo^000000";
		else				.@secuAutoAnn$ = "^FF0000Inactive^000000";
		mes "    "+.@secuAutoAnn$+" (Cada: ^339933"+$SecuAnnounceTime+" Minutos^000000)";
		next;
		menu "Cambiar el modo",OnSecuSetupChange,"Auto-Anuncio",OnSecuSetAnnouncer,"Resetear Security de un jugador",OnSecuSetupReset,"Close",-;
		close;

	OnSecuSetupChange:
		next;
		mes .npcname$;
		mes "^FF3333---- Security Mode ----^000000";
		mes "Ingrese el modo de seguridad para que el jugador establezca su @security:";
		mes "^0097FF0. No forzar para establecer^000000";
		mes "^FF6A001. Forzar para establecer (Recomendado)^000000";
		next;
		input .@secMode;
		$SecuMode = .@secMode;
		if ($SecuMode == 0)	.@secuMode$ = "^0097FFInsegura^000000";
		else 				.@secuMode$ = "^FF6A00Forzar para establecer^000000";
		mes .npcname$;
		mes "El modo de seguridad se ha establecido en "+.@secuMode$+"";
		mes "Esta configuración se verá afectada para los jugadores después de que cierren sesión";
		next;
		callsub(OnSecuSettings);
		end;

	OnSecuSetupReset:
		close2;
		callsub(OnResets);
		end;
	end;

	OnSecuSetAnnouncer:
		next;
		mes .npcname$;
		mes "^FF3333---- Auto-Anuncio ----^000000";
		mes "Status:";
		if ($SecuAnnounce)	mes "   ^0000FFActivo^000000";
		else				mes "   ^FF0000Inactivo^000000";
		mes "Anunciar en cada:";
		mes "   ^339933"+$SecuAnnounceTime+" Minutos^000000";
		switch(select("Activar On/Off:Establecer el retraso:Close")) {
			case 1:
				next;
				mes .npcname$;
				mes "Estas seguro?";
				if ($SecuAnnounce)	menu "Desactivado",OnSecuAnnouncerOff,"Close",-;
				else				menu "Activado",OnSecuAnnouncerOn,"Close",-;
				break;
			case 2:
				next;
				mes .npcname$;
				mes "El actual es ^339933"+$SecuAnnounceTime+"^000000 Minutos";
				input .@inAnnDelay,0,7200;
				mes "Nuevo valor es ^0000FF"+.@inAnnDelay+"^000000 Minutos";
				$SecuAnnounceTime = .@inAnnDelay;
				break;
			default:
				close;
				break;
		}
		next;
		callsub(OnSecuSettings);
		end;

	OnSecuAnnouncerOff:
		next;
		mes .npcname$;
		mes "Auto-Anuncio esta ^FF0000OFF^000000";
		$SecuAnnounce = 0;
		next;
		callsub(OnSecuSettings);
		end;

	OnSecuAnnouncerOn:
		next;
		mes .npcname$;
		mes "Auto-Anuncio esta ^0000FFON^000000";
		$SecuAnnounce = 1;
		next;
		callsub(OnSecuSettings);
		end;

	OnPCLoginEvent:
		if ($SecuMode == 1)
			setsecurity 1,getcharid(0);
		else{
			if ((getstrlen(#SecuCode$)) > 0)
				setsecurity 1,getcharid(0);
			else
				setsecurity 0,getcharid(0);
		}
		if (!(getstrlen(#SecuCode$)) && $SecuMode){
			message strcharinfo(0),"Asegúrese de que su cuenta esté protegida, configure su código de seguridad!";
		}
		message strcharinfo(0),"Use @security para configurar su sistema de seguridad!";
		end;

	OnResets:
		mes .npcname$;
		mes "Puedes restablecer el código de seguridad de la cuenta";
		mes "Por supuesto, debes saber el nombre del jugador a quién quieres restablecer";
		mes "Inserta el ^ff0000char name^000000 claramente!";
		input .@resetSecuName$;
		.@res = query_sql("SELECT `account_id`, `char_id`, `name` FROM `char` WHERE `name` = '"+escape_sql(.@resetSecuName$)+"'",.@resetAccID,.@resetCharID,.@resetCharName$);
		if (.@res < 0 || .@resetAccID <= 0) {
			next;
			mes .npcname$;
			mes "Player no encontrado.";
			close;
		}
		else {
			next;
			mes .npcname$;
			mes "Jugador encontrado.";
			mes "Nombre : ^990000"+.@resetCharName$+"^000000";
			mes "AccountID : ^009900"+.@resetAccID+"^000000";
			mes "CharID : ^333399"+.@resetCharID+"^000000";
			mes "Security Code : ^333399"+#SecuCode$+"^000000";
			//query_sql "SELECT `value` FROM `global_reg_value` WHERE `account_id` = "+.@resetAccID+" AND CONVERT(`str` USING utf8) = '#SecuCode$' AND `char_id` = '0'",.@resetSecuCode$;
			query_sql("SELECT `value` FROM `acc_reg_str` WHERE `account_id` = "+.@resetAccID+" AND CONVERT(`key` USING utf8) = '#SecuCode$' LIMIT 1",.@resetSecuCode$);
			if (getstrlen(.@resetSecuCode$) <= 0){
				mes "Codigo de seguridad : ^ff0000Desactivado^000000";
				mes "No puedes restablecer este código de seguridad.";
				close;
			}
			else {
				mes "Codigo de seguridad : ^663399activado^000000";
				mes "¿Desea restablecer el código de seguridad de la cuenta?";
				if (select("Si","No") == 1) {
					next;
					mes .npcname$;
					//query_sql("DELETE FROM `global_reg_value` WHERE `account_id` = '"+.@resetAccID+"' AND CONVERT(`str` USING utf8) = '#SecuCode$' AND `char_id` = '0' AND `value` = '"+.@resetSecuCode$+"' LIMIT 1");
					query_sql("DELETE FROM `acc_reg_str` WHERE `account_id` = '"+.@resetAccID+"' AND CONVERT(`key` USING utf8) = '#SecuCode$' AND `value` = '"+.@resetSecuCode$+"' LIMIT 1");
					query_sql("DELETE FROM `acc_reg_num` WHERE `account_id` = '"+.@resetAccID+"' AND CONVERT(`key` USING utf8) = '#CyACCOUNTLOCK' LIMIT 1");
					mes "Account's Security Code has been ^0000ffdeleted successfully^000000";
					atcommand "@kick "+.@resetCharName$;
					next;
					callsub(OnSecuSettings);
					end;
				}
				else {
					close;
				}
			}
		}
		end;

	OnInit:
		.secuCharMin = 4;
		.secuCharMax = 23;
		.secuGMCanSet = 99;
		.npcname$ = "^ff0000[ Security ]^000000";
		bindatcmd "security",strnpcinfo(3)+"::OnSecuSettings",0,99;
		end;
}

-	script	SecurityAnnouncer	-1,{
	OnInit:
		if (!$SecuAnnounce)		$SecuAnnounce = 1;
		if (!$SecuAnnounceTime)	$SecuAnnounceTime = 30;
		while($SecuAnnounce && $SecuAnnounceTime > 0) {
			//Add these messages by yourself
			switch(rand(5)) {
				case 1: $@SecurityMes$ = "No olvides Activar tu @security.";	break;
				case 2: $@SecurityMes$ = "@security habilitado asegurará la transacción segura de tu cuenta.";	break;
				case 3: $@SecurityMes$ = "El Staff nunca le pregunta su código de seguridad y datos privados.";	break;
				case 4: $@SecurityMes$ = "Tu cuenta es su responsabilidad.";	break;
				default: $@SecurityMes$ = "Recuerda tu código de seguridad y no lo comparta.";	break;
			}
			announce $@SecurityMes$,bc_blue;
			sleep ($SecuAnnounceTime*60000);
		}
	end;
}
